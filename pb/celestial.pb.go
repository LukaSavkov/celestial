// Code generated by protoc-gen-go. DO NOT EDIT.
// source: celestial.proto

/*
Package service is a generated protocol buffer package.

It is generated from these files:
	celestial.proto

It has these top-level messages:
	KV
	Label
	Data
	ListReq
	MutateReq
	ListResp
	MutateResp
*/
package service

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

// Enumerations
type ReqKind int32

const (
	ReqKind_SECRETS ReqKind = 0
	ReqKind_CONFIGS ReqKind = 1
)

var ReqKind_name = map[int32]string{
	0: "SECRETS",
	1: "CONFIGS",
}
var ReqKind_value = map[string]int32{
	"SECRETS": 0,
	"CONFIGS": 1,
}

func (x ReqKind) String() string {
	return proto.EnumName(ReqKind_name, int32(x))
}
func (ReqKind) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

// Other messages
type KV struct {
	Key   string `protobuf:"bytes,1,opt,name=key" json:"key,omitempty"`
	Value string `protobuf:"bytes,2,opt,name=value" json:"value,omitempty"`
}

func (m *KV) Reset()                    { *m = KV{} }
func (m *KV) String() string            { return proto.CompactTextString(m) }
func (*KV) ProtoMessage()               {}
func (*KV) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *KV) GetKey() string {
	if m != nil {
		return m.Key
	}
	return ""
}

func (m *KV) GetValue() string {
	if m != nil {
		return m.Value
	}
	return ""
}

type Label struct {
	Labels []*KV `protobuf:"bytes,1,rep,name=labels" json:"labels,omitempty"`
}

func (m *Label) Reset()                    { *m = Label{} }
func (m *Label) String() string            { return proto.CompactTextString(m) }
func (*Label) ProtoMessage()               {}
func (*Label) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *Label) GetLabels() []*KV {
	if m != nil {
		return m.Labels
	}
	return nil
}

type Data struct {
	Data []*KV `protobuf:"bytes,1,rep,name=data" json:"data,omitempty"`
}

func (m *Data) Reset()                    { *m = Data{} }
func (m *Data) String() string            { return proto.CompactTextString(m) }
func (*Data) ProtoMessage()               {}
func (*Data) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *Data) GetData() []*KV {
	if m != nil {
		return m.Data
	}
	return nil
}

// Requests
type ListReq struct {
	RegionId  string  `protobuf:"bytes,1,opt,name=region_id,json=regionId" json:"region_id,omitempty"`
	ClusterId string  `protobuf:"bytes,2,opt,name=cluster_id,json=clusterId" json:"cluster_id,omitempty"`
	Labels    *Label  `protobuf:"bytes,3,opt,name=labels" json:"labels,omitempty"`
	Kind      ReqKind `protobuf:"varint,4,opt,name=kind,enum=service.ReqKind" json:"kind,omitempty"`
}

func (m *ListReq) Reset()                    { *m = ListReq{} }
func (m *ListReq) String() string            { return proto.CompactTextString(m) }
func (*ListReq) ProtoMessage()               {}
func (*ListReq) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

func (m *ListReq) GetRegionId() string {
	if m != nil {
		return m.RegionId
	}
	return ""
}

func (m *ListReq) GetClusterId() string {
	if m != nil {
		return m.ClusterId
	}
	return ""
}

func (m *ListReq) GetLabels() *Label {
	if m != nil {
		return m.Labels
	}
	return nil
}

func (m *ListReq) GetKind() ReqKind {
	if m != nil {
		return m.Kind
	}
	return ReqKind_SECRETS
}

type MutateReq struct {
	RegionId  string  `protobuf:"bytes,1,opt,name=region_id,json=regionId" json:"region_id,omitempty"`
	ClusterId string  `protobuf:"bytes,2,opt,name=cluster_id,json=clusterId" json:"cluster_id,omitempty"`
	Labels    *Label  `protobuf:"bytes,3,opt,name=labels" json:"labels,omitempty"`
	Data      *Data   `protobuf:"bytes,4,opt,name=data" json:"data,omitempty"`
	Kind      ReqKind `protobuf:"varint,5,opt,name=kind,enum=service.ReqKind" json:"kind,omitempty"`
}

func (m *MutateReq) Reset()                    { *m = MutateReq{} }
func (m *MutateReq) String() string            { return proto.CompactTextString(m) }
func (*MutateReq) ProtoMessage()               {}
func (*MutateReq) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{4} }

func (m *MutateReq) GetRegionId() string {
	if m != nil {
		return m.RegionId
	}
	return ""
}

func (m *MutateReq) GetClusterId() string {
	if m != nil {
		return m.ClusterId
	}
	return ""
}

func (m *MutateReq) GetLabels() *Label {
	if m != nil {
		return m.Labels
	}
	return nil
}

func (m *MutateReq) GetData() *Data {
	if m != nil {
		return m.Data
	}
	return nil
}

func (m *MutateReq) GetKind() ReqKind {
	if m != nil {
		return m.Kind
	}
	return ReqKind_SECRETS
}

// Replys
type ListResp struct {
	Error string `protobuf:"bytes,1,opt,name=error" json:"error,omitempty"`
	Data  []*KV  `protobuf:"bytes,2,rep,name=data" json:"data,omitempty"`
}

func (m *ListResp) Reset()                    { *m = ListResp{} }
func (m *ListResp) String() string            { return proto.CompactTextString(m) }
func (*ListResp) ProtoMessage()               {}
func (*ListResp) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{5} }

func (m *ListResp) GetError() string {
	if m != nil {
		return m.Error
	}
	return ""
}

func (m *ListResp) GetData() []*KV {
	if m != nil {
		return m.Data
	}
	return nil
}

type MutateResp struct {
	Error string `protobuf:"bytes,1,opt,name=error" json:"error,omitempty"`
}

func (m *MutateResp) Reset()                    { *m = MutateResp{} }
func (m *MutateResp) String() string            { return proto.CompactTextString(m) }
func (*MutateResp) ProtoMessage()               {}
func (*MutateResp) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{6} }

func (m *MutateResp) GetError() string {
	if m != nil {
		return m.Error
	}
	return ""
}

func init() {
	proto.RegisterType((*KV)(nil), "service.KV")
	proto.RegisterType((*Label)(nil), "service.Label")
	proto.RegisterType((*Data)(nil), "service.Data")
	proto.RegisterType((*ListReq)(nil), "service.ListReq")
	proto.RegisterType((*MutateReq)(nil), "service.MutateReq")
	proto.RegisterType((*ListResp)(nil), "service.ListResp")
	proto.RegisterType((*MutateResp)(nil), "service.MutateResp")
	proto.RegisterEnum("service.ReqKind", ReqKind_name, ReqKind_value)
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for CelestialService service

type CelestialServiceClient interface {
	List(ctx context.Context, in *ListReq, opts ...grpc.CallOption) (*ListResp, error)
	Mutate(ctx context.Context, in *MutateReq, opts ...grpc.CallOption) (*MutateResp, error)
}

type celestialServiceClient struct {
	cc *grpc.ClientConn
}

func NewCelestialServiceClient(cc *grpc.ClientConn) CelestialServiceClient {
	return &celestialServiceClient{cc}
}

func (c *celestialServiceClient) List(ctx context.Context, in *ListReq, opts ...grpc.CallOption) (*ListResp, error) {
	out := new(ListResp)
	err := grpc.Invoke(ctx, "/service.CelestialService/List", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *celestialServiceClient) Mutate(ctx context.Context, in *MutateReq, opts ...grpc.CallOption) (*MutateResp, error) {
	out := new(MutateResp)
	err := grpc.Invoke(ctx, "/service.CelestialService/Mutate", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for CelestialService service

type CelestialServiceServer interface {
	List(context.Context, *ListReq) (*ListResp, error)
	Mutate(context.Context, *MutateReq) (*MutateResp, error)
}

func RegisterCelestialServiceServer(s *grpc.Server, srv CelestialServiceServer) {
	s.RegisterService(&_CelestialService_serviceDesc, srv)
}

func _CelestialService_List_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CelestialServiceServer).List(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/service.CelestialService/List",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CelestialServiceServer).List(ctx, req.(*ListReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _CelestialService_Mutate_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MutateReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CelestialServiceServer).Mutate(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/service.CelestialService/Mutate",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CelestialServiceServer).Mutate(ctx, req.(*MutateReq))
	}
	return interceptor(ctx, in, info, handler)
}

var _CelestialService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "service.CelestialService",
	HandlerType: (*CelestialServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "List",
			Handler:    _CelestialService_List_Handler,
		},
		{
			MethodName: "Mutate",
			Handler:    _CelestialService_Mutate_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "celestial.proto",
}

func init() { proto.RegisterFile("celestial.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 375 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xbc, 0x92, 0xd1, 0x6a, 0xe2, 0x40,
	0x14, 0x86, 0x1d, 0x8d, 0xc6, 0x9c, 0xb0, 0x6e, 0xf6, 0xec, 0x5e, 0x04, 0x97, 0x65, 0xb3, 0x71,
	0xd9, 0x0d, 0xc5, 0x7a, 0x11, 0x9f, 0xa0, 0x58, 0x5b, 0x44, 0xdb, 0x42, 0x52, 0xbc, 0x2d, 0xa3,
	0x19, 0x4a, 0x30, 0x18, 0x4d, 0x46, 0xa1, 0xcf, 0xd1, 0x97, 0xe9, 0xe3, 0x95, 0xc9, 0x8c, 0x53,
	0x68, 0x6b, 0x2f, 0x7b, 0x37, 0xe7, 0xff, 0x4f, 0xe6, 0x7c, 0x39, 0xff, 0xc0, 0xd7, 0x25, 0xcb,
	0x58, 0xc9, 0x53, 0x9a, 0x0d, 0x36, 0x45, 0xce, 0x73, 0x34, 0x4b, 0x56, 0xec, 0xd3, 0x25, 0xf3,
	0xfb, 0x50, 0x9f, 0xce, 0xd1, 0x81, 0xc6, 0x8a, 0x3d, 0xb8, 0xc4, 0x23, 0x81, 0x15, 0x89, 0x23,
	0xfe, 0x80, 0xe6, 0x9e, 0x66, 0x3b, 0xe6, 0xd6, 0x2b, 0x4d, 0x16, 0x7e, 0x1f, 0x9a, 0x33, 0xba,
	0x60, 0x19, 0xf6, 0xa0, 0x95, 0x89, 0x43, 0xe9, 0x12, 0xaf, 0x11, 0xd8, 0xa1, 0x3d, 0x50, 0x17,
	0x0e, 0xa6, 0xf3, 0x48, 0x59, 0xfe, 0x7f, 0x30, 0xce, 0x29, 0xa7, 0xf8, 0x1b, 0x8c, 0x84, 0x72,
	0xfa, 0x5e, 0x6b, 0x65, 0xf8, 0x8f, 0x04, 0xcc, 0x59, 0x5a, 0xf2, 0x88, 0x6d, 0xf1, 0x27, 0x58,
	0x05, 0xbb, 0x4f, 0xf3, 0xf5, 0x5d, 0x9a, 0x28, 0xa0, 0xb6, 0x14, 0x26, 0x09, 0xfe, 0x02, 0x58,
	0x66, 0xbb, 0x92, 0xb3, 0x42, 0xb8, 0x12, 0xcd, 0x52, 0xca, 0x24, 0xc1, 0x7f, 0x9a, 0xaa, 0xe1,
	0x91, 0xc0, 0x0e, 0x3b, 0x7a, 0x54, 0x45, 0x7d, 0x00, 0xc3, 0xbf, 0x60, 0xac, 0xd2, 0x75, 0xe2,
	0x1a, 0x1e, 0x09, 0x3a, 0xa1, 0xa3, 0xbb, 0x22, 0xb6, 0x9d, 0xa6, 0xeb, 0x24, 0xaa, 0x5c, 0xff,
	0x89, 0x80, 0x75, 0xb5, 0xe3, 0x94, 0xb3, 0xcf, 0xe2, 0xfa, 0xa3, 0x16, 0x65, 0x54, 0x5d, 0x5f,
	0x74, 0x97, 0xd8, 0xa2, 0x5c, 0x95, 0x46, 0x6f, 0x7e, 0x88, 0x7e, 0x06, 0x6d, 0xb9, 0xcf, 0x72,
	0x23, 0x92, 0x64, 0x45, 0x91, 0x17, 0x0a, 0x5a, 0x16, 0x3a, 0x93, 0xfa, 0xb1, 0x4c, 0x7c, 0x80,
	0xc3, 0xcf, 0x1f, 0xbb, 0xe4, 0xa4, 0x07, 0xa6, 0x9a, 0x8b, 0x36, 0x98, 0xf1, 0x78, 0x14, 0x8d,
	0x6f, 0x63, 0xa7, 0x26, 0x8a, 0xd1, 0xcd, 0xf5, 0xc5, 0xe4, 0x32, 0x76, 0x48, 0xb8, 0x07, 0x67,
	0x74, 0x78, 0x7d, 0xb1, 0x9c, 0x82, 0xa7, 0x60, 0x08, 0x3e, 0x7c, 0xe1, 0x57, 0xf1, 0x77, 0xbf,
	0xbd, 0x52, 0xca, 0x8d, 0x5f, 0xc3, 0x21, 0xb4, 0x24, 0x0b, 0xa2, 0xb6, 0x75, 0x32, 0xdd, 0xef,
	0x6f, 0x34, 0xf1, 0xd1, 0xa2, 0x55, 0xbd, 0xf4, 0xe1, 0x73, 0x00, 0x00, 0x00, 0xff, 0xff, 0xb7,
	0x75, 0x1e, 0xb1, 0xfc, 0x02, 0x00, 0x00,
}
